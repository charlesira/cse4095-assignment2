{"ast":null,"code":"var _jsxFileName = \"/Users/charlesira/Development/FW2020/assignment2/react-crud/src/components/class.component.js\";\nimport React, { Component } from \"react\";\nimport ClassDataService from \"../services/class.service\";\nexport default class Class extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeTitle = this.onChangeTitle.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.getClass = this.getClass.bind(this);\n    this.updatePublished = this.updatePublished.bind(this);\n    this.updateClass = this.updateClass.bind(this);\n    this.deleteClass = this.deleteClass.bind(this);\n    this.state = {\n      currentClass: {\n        id: null,\n        title: \"\",\n        description: \"\",\n        published: false\n      },\n      message: \"\"\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"did the component mount?\");\n    this.getClass(this.props.match.params.id);\n  }\n\n  onChangeTitle(e) {\n    const title = e.target.value;\n    this.setState(function (prevState) {\n      return {\n        currentClass: { ...prevState.currentClass,\n          title: title\n        }\n      };\n    });\n  }\n\n  onChangeDescription(e) {\n    const description = e.target.value;\n    this.setState(prevState => ({\n      currentClass: { ...prevState.currentClass,\n        description: description\n      }\n    }));\n  }\n\n  getClass(id) {\n    ClassDataService.get(id).then(response => {\n      this.setState({\n        currentClass: response.data\n      });\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  updatePublished(status) {\n    var data = {\n      id: this.state.currentClass.id,\n      title: this.state.currentClass.title,\n      description: this.state.currentClass.description,\n      published: status\n    };\n    ClassDataService.update(this.state.currentClass.id, data).then(response => {\n      this.setState(prevState => ({\n        currentClass: { ...prevState.currentClass,\n          published: status\n        }\n      }));\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  updateClass() {\n    ClassDataService.update(this.state.currentClass.id, this.state.currentClass).then(response => {\n      console.log(response.data);\n      this.setState({\n        message: \"The class was updated successfully!\"\n      });\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  deleteClass() {\n    ClassDataService.delete(this.state.currentClass.id).then(response => {\n      console.log(response.data);\n      this.props.history.push('/class');\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  render() {\n    const {\n      currentClass\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, currentClass ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"edit-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }\n    }, \"Class\"), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 33\n      }\n    }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"title\",\n      value: currentClass.title,\n      onChange: this.onChangeTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 33\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"description\",\n      value: currentClass.description,\n      onChange: this.onChangeDescription,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 37\n      }\n    }, \"Status:\")), currentClass.published ? \"Published\" : \"Pending\")), currentClass.published ? /*#__PURE__*/React.createElement(\"button\", {\n      className: \"badge badge-primary mr-2\",\n      onClick: () => this.updatePublished(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 29\n      }\n    }, \"UnPublish\") : /*#__PURE__*/React.createElement(\"button\", {\n      className: \"badge badge-primary mr-2\",\n      onClick: () => this.updatePublished(true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 33\n      }\n    }, \"Publish\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"badge badge-danger mr-2\",\n      onClick: this.deleteClass,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 25\n      }\n    }, \"Delete\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"badge badge-success\",\n      onClick: this.updateClass,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 25\n      }\n    }, \"Update\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 25\n      }\n    }, this.state.message)) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 29\n      }\n    }, \"Please click on a Class...\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/charlesira/Development/FW2020/assignment2/react-crud/src/components/class.component.js"],"names":["React","Component","ClassDataService","Class","constructor","props","onChangeTitle","bind","onChangeDescription","getClass","updatePublished","updateClass","deleteClass","state","currentClass","id","title","description","published","message","componentDidMount","console","log","match","params","e","target","value","setState","prevState","get","then","response","data","catch","status","update","delete","history","push","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ClassDataService from \"../services/class.service\";\n\nexport default class Class extends Component {\n    constructor(props) {\n        super(props);\n        this.onChangeTitle = this.onChangeTitle.bind(this);\n        this.onChangeDescription = this.onChangeDescription.bind(this);\n        this.getClass = this.getClass.bind(this);\n        this.updatePublished = this.updatePublished.bind(this);\n        this.updateClass = this.updateClass.bind(this);\n        this.deleteClass = this.deleteClass.bind(this);\n\n        this.state = {\n            currentClass: {\n                id: null,\n                title: \"\",\n                description: \"\",\n                published: false\n            },\n            message: \"\"\n        };\n    }\n    \n    componentDidMount() {\n        console.log(\"did the component mount?\");\n        this.getClass(this.props.match.params.id);\n    }\n\n    onChangeTitle(e) {\n        const title = e.target.value;\n\n        this.setState(function (prevState) {\n            return {\n                currentClass: {\n                    ...prevState.currentClass,\n                    title: title\n                }\n            };\n        });\n    }\n\n    onChangeDescription(e) {\n        const description = e.target.value;\n\n        this.setState(prevState => ({\n            currentClass: {\n                ...prevState.currentClass,\n                description: description\n            }\n        }));\n    }\n\n    getClass(id) {\n        ClassDataService.get(id)\n            .then(response => {\n                this.setState({\n                    currentClass: response.data\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    updatePublished(status) {\n        var data = {\n            id: this.state.currentClass.id,\n            title: this.state.currentClass.title,\n            description: this.state.currentClass.description,\n            published: status\n        };\n\n        ClassDataService.update(this.state.currentClass.id, data)\n            .then(response => {\n                this.setState(prevState => ({\n                    currentClass: {\n                        ...prevState.currentClass,\n                        published: status\n                    }\n                }));\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    updateClass() {\n        ClassDataService.update(\n            this.state.currentClass.id,\n            this.state.currentClass\n        )\n            .then(response => {\n                console.log(response.data);\n                this.setState({\n                    message: \"The class was updated successfully!\"\n                });\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    deleteClass() {\n        ClassDataService.delete(this.state.currentClass.id)\n            .then(response => {\n                console.log(response.data);\n                this.props.history.push('/class')\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    render() {\n        const { currentClass } = this.state;\n        return (\n            <div>\n                {currentClass ? (\n                    <div className=\"edit-form\">\n                        <h4>Class</h4>\n                        <form>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"title\">Title</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"title\"\n                                    value={currentClass.title}\n                                    onChange={this.onChangeTitle}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"description\">Description</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"description\"\n                                    value={currentClass.description}\n                                    onChange={this.onChangeDescription}\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label>\n                                    <strong>Status:</strong>\n                                </label>\n                                {currentClass.published ? \"Published\" : \"Pending\"}\n                            </div>\n                        </form>\n\n                        {currentClass.published ? (\n                            <button\n                                className=\"badge badge-primary mr-2\"\n                                onClick={() => this.updatePublished(false)}\n                            >\n                                UnPublish\n                            </button>\n                        ) : (\n                                <button\n                                    className=\"badge badge-primary mr-2\"\n                                    onClick={() => this.updatePublished(true)}\n                                >\n                                    Publish\n                                </button>\n                            )}\n\n                        <button\n                            className=\"badge badge-danger mr-2\"\n                            onClick={this.deleteClass}\n                        >\n                            Delete\n            </button>\n\n                        <button\n                            type=\"submit\"\n                            className=\"badge badge-success\"\n                            onClick={this.updateClass}\n                        >\n                            Update\n            </button>\n                        <p>{this.state.message}</p>\n                    </div>\n                ) : (\n                        <div>\n                            <br />\n                            <p>Please click on a Class...</p>\n                        </div>\n                    )}\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}